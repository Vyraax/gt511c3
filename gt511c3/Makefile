# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-linux-x86_64/gt511c3
  TARGET = $(TARGETDIR)/libgt511c3.a
  OBJDIR = ../bin-int/Debug-linux-x86_64/gt511c3
  DEFINES += -DIMGUI_API=__attribute__\(\(visibility\(\"default\"\)\)\) -DGT_PLATFORM_LINUX -DGLFW_INCLUDE_NONE -D_CRT_SECURE_NO_WARNINGS -DGT_DEBUG
  INCLUDES += -Ivendor/serial/include -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/stb -Isrc
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a vendor/imgui/bin/Debug-linux-x86_64/imgui/libimgui.a vendor/serial/bin/Debug-linux-x86_64/serial/libserial.a -lpthread -ldl -lX11 -lXrandr -lXinerama -lXi -lGL
  LDDEPS += vendor/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a vendor/imgui/bin/Debug-linux-x86_64/imgui/libimgui.a vendor/serial/bin/Debug-linux-x86_64/serial/libserial.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -IGNORE:4221 -IGNORE:4006
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf ../Scanner/data ../bin/Release-linux-x86_64/Scanner/data
	cp -rf ../Scanner/data ../bin/Debug-linux-x86_64/Scanner/data
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../bin/Release-linux-x86_64/gt511c3
  TARGET = $(TARGETDIR)/libgt511c3.a
  OBJDIR = ../bin-int/Release-linux-x86_64/gt511c3
  DEFINES += -DIMGUI_API=__attribute__\(\(visibility\(\"default\"\)\)\) -DGT_PLATFORM_LINUX -DGLFW_INCLUDE_NONE -D_CRT_SECURE_NO_WARNINGS -DGT_RELEASE
  INCLUDES += -Ivendor/serial/include -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/stb -Isrc
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += vendor/Glad/bin/Release-linux-x86_64/Glad/libGlad.a vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a vendor/imgui/bin/Release-linux-x86_64/imgui/libimgui.a vendor/serial/bin/Release-linux-x86_64/serial/libserial.a -lpthread -ldl -lX11 -lXrandr -lXinerama -lXi -lGL
  LDDEPS += vendor/Glad/bin/Release-linux-x86_64/Glad/libGlad.a vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a vendor/imgui/bin/Release-linux-x86_64/imgui/libimgui.a vendor/serial/bin/Release-linux-x86_64/serial/libserial.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -IGNORE:4221 -IGNORE:4006
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf ../Scanner/data ../bin/Release-linux-x86_64/Scanner/data
	cp -rf ../Scanner/data ../bin/Debug-linux-x86_64/Scanner/data
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Application.o \
	$(OBJDIR)/Clock.o \
	$(OBJDIR)/Engine.o \
	$(OBJDIR)/GameLoop.o \
	$(OBJDIR)/Profiler.o \
	$(OBJDIR)/Timer.o \
	$(OBJDIR)/Utils.o \
	$(OBJDIR)/Event.o \
	$(OBJDIR)/ImGuiBuild.o \
	$(OBJDIR)/ImGuiLayer.o \
	$(OBJDIR)/Layer.o \
	$(OBJDIR)/LayerStack.o \
	$(OBJDIR)/Texture.o \
	$(OBJDIR)/Window.o \
	$(OBJDIR)/Scanner.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking gt511c3
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning gt511c3
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/Application.o: src/Application/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Clock.o: src/Core/Clock.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Engine.o: src/Core/Engine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GameLoop.o: src/Core/GameLoop.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Profiler.o: src/Core/Profiler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Timer.o: src/Core/Timer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Utils.o: src/Core/Utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Event.o: src/Events/Event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/Interface/ImGuiBuild.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiLayer.o: src/Interface/ImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/Interface/Layer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Interface/LayerStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Interface/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Interface/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scanner.o: src/Scanner/Scanner.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif